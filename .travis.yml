language: cpp

cache: ccache

branches:
  only:
  - master
  - /^v\d.*$/

matrix:
  include:
  - os: linux
    env: BUILD_SYSTEM=qmake DEPLOY=1
  - os: linux
    env: BUILD_SYSTEM=cmake
  - os: osx
    env: BUILD_SYSTEM=qmake DEPLOY=1
  - os: osx
    env: BUILD_SYSTEM=cmake

sudo: required
dist: trusty

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository ppa:beineri/opt-qt591-trusty -y &&  
      sudo apt-get update -qq  
    ; fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then   brew install p7zip ccache qt5 openssl xz  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then   export PATH="/usr/local/opt/qt/bin:$PATH" ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then   source scripts/prepare_python_macos.sh    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get -y install qt59base qt59svg qt59webengine --allow-unauthenticated &&
      source /opt/qt5*/bin/qt5*-env.sh
    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source scripts/prepare_python_linux.sh    ; fi

before_script:
  - git submodule init ; git submodule update
  - cd radare2
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sed -i 's,R2_PREFIX.*,R2_PREFIX "/tmp/.cutter_usr",' libr/include/r_userconf.h.acr;
        sed -i 's,R2_DATDIR.*,R2_DATDIR "/tmp/.cutter_usr/share",' libr/include/r_userconf.h.acr;
        echo "Modified r_userconf.h.acr:";
        cat libr/include/r_userconf.h.acr;
        echo "-----------------------------";
        INSTALL_TARGET=install sys/install.sh;
    else
        LDFLAGS=-headerpad_max_install_names INSTALL_TARGET=install sys/install.sh;
    fi
  - cd ..

script:
  - mkdir build
  - cd build
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$BUILD_SYSTEM" == "qmake" ]]; then
            PKG_CONFIG_PATH="$CUSTOM_PYTHON_PREFIX/lib/pkgconfig" qmake CONFIG+=CUTTER_ENABLE_JUPYTER CONFIG+=CUTTER_ENABLE_QTWEBENGINE PREFIX=/usr APPIMAGE=1 ../src && make -j4;
        elif [[ "$BUILD_SYSTEM" == "qmake" ]]; then
            cmake ../src && make -j4;
       fi
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        if [[ "$BUILD_SYSTEM" == "qmake" ]]; then
            qmake CONFIG+=CUTTER_ENABLE_JUPYTER CONFIG+=CUTTER_ENABLE_QTWEBENGINE PYTHON_FRAMEWORK_DIR=$PYTHON_FRAMEWORK_DIR ../src &&
            make -j4;
        elif [[ "$BUILD_SYSTEM" == "qmake" ]]; then
            cmake ../src && make -j4;
       fi
    fi

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  
      macdeployqt Cutter.app &&
      "$TRAVIS_BUILD_DIR/scripts/appbundle_patch_qtwebengine.sh" Cutter.app &&
      "$TRAVIS_BUILD_DIR/scripts/appbundle_embed_python.sh" "$PYTHON_FRAMEWORK_DIR/Python.framework" Cutter.app Cutter.app/Contents/MacOS/Cutter &&
      mkdir image && cp -a Cutter.app image/ &&
      hdiutil create -srcfolder image -volname Cutter -fs HFS+ Cutter.dmg &&
      export FILE_TO_UPLOAD="Cutter.dmg"
    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo make INSTALL_ROOT=appdir install &&
      sudo chown -R $USER appdir &&
      cp -r /usr/share/radare2 appdir/usr/share/ &&
      cp -RT "$CUSTOM_PYTHON_PREFIX" appdir/usr/ &&
      cd appdir/usr/ &&
        find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf &&
        rm -r lib/python3.6/test lib/python3.6/idlelib lib/python3.6/curses lib/python3.6/lib2to3 &&
      cd ../.. &&
      wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" &&
      chmod a+x linuxdeployqt*.AppImage &&
      unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH &&
      LD_LIBRARY_PATH=$CUSTOM_PYTHON_PREFIX/lib ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs -no-strip -verbose=2 &&
      LD_LIBRARY_PATH=$CUSTOM_PYTHON_PREFIX/lib ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage -no-strip -verbose=2 &&
      find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq &&
      export FILE_TO_UPLOAD="Cutter-x86_64.AppImage"
    ; fi

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: LgjBz/9Jt1XVyA8g6NiRglvdbdupWnilpJf6LqIi1VL18I2dJxAuRuHIE17XWKt4zR4P8Lrp/OhfMcRvLFYaZYTFSPZHrvC1y0liRZ9MfqV5gqwbqeENv1k+BEtw9qMFoAezWPf2Gb5N7LZgq+Xsz+mUdjwc1aLEgaL9dhb60ReKvtxlM2Gl/V1rvBARccuyAwqyhulFfg0P2toq7b2Ny5Pfzz2OvkKe5IqBttM1dyHNKIzy1eDpRuMOv8j11xnJ37W/S8FNDSFaP0C4O/vlUPvPAz6WpOe6P1c6jIddoBykU1kBDmIOAtsup0xdHf+IJb1J4oJGhU2s57MOM6gLxwmeyr+hP3Df9sAlNZ7p9l8lDf2PzSVlNu0cQsCn1/mNyeOmmCh3i8fjJBak4awijuXvqVTrwrv6O84OY82ncF7c+4Q/26kT9Sk980qPnXXBkwvVMVQguEKHaXBed+PK6wNVUrEuGNneWt6/nb64usG1bAMOeIV1Z/MPySwFuFh6IShkOYLFiU7bNRbxeJ2HxnIjOniHre1xts/iOWgKiSHiKOhr+n86mWlJrzTAShqQY8p44EKrf3IfmJ4I3rPTVQkXhkhIEFxb0vHhiLZQZRbEqXPEoyTpAVRYlcnhlWOcW9mi4+RFg99WWis0GW44oLL/mU/to2yhX/N4LZx+EBA=
  file:
    - "${FILE_TO_UPLOAD}"
  on:
    repo: thestr4ng3r/cutter
    condition: $DEPLOY=1
